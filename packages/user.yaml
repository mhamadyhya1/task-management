
  /users:
    post:
      summary: Create a user
      description: Only admins can create other users.
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                  description: must be unique
                password:
                  type: string
                  format: password
                  minLength: 8
                  description: At least one number and one letter
                role:
                   type: string
                   enum: [regular, admin]
              example:
                name: fake name
                email: fake@example.com
                password: password1
                role: regular
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/User'
        "400":
          $ref: '#/components/responses/DuplicateEmail'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
          
  /users/{userId}:
    get:
      summary: Get a user
      description: Logged in users can fetch only their own user information.
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/User'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
 
    patch:
      summary: Update a user
      description: Logged in users can only update their own information. Only admins can update other users.
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                  description: must be unique
                password:
                  type: string
                  format: password
                  minLength: 8
                  description: At least one number and one letter
              example:
                name: fake name
                email: fake@example.com
                password: password1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/User'
        "400":
          $ref: '#/components/responses/DuplicateEmail'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
 
    delete:
      summary: Delete a user
      description: Logged in users can delete only themselves. Only admins can delete other users.
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User id
      responses:
        "200":
          description: No content
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
